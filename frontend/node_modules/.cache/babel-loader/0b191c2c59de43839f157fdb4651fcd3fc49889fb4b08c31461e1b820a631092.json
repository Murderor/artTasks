{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\JS\\\\test\\\\Tasks\\\\frontend\\\\src\\\\pages\\\\about.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../Components/main.css';\nimport '../Components/office-plan.css';\nimport '../Components/bootstrap-theme.css';\nimport '../Components/about.css';\nimport avatar from '../images/avatar.jpg';\nimport { Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const pic = null || avatar;\n  const urlParams = new URLSearchParams(window.location.search);\n  const id = urlParams.get(\"id\");\n  const [name, setName] = useState([\"unknown\"]);\n  const [technology, setTechnology] = useState([\"unknown\"]);\n  const [position, setPosition] = useState([\"unknown\"]);\n  const [workspace, setWorkspace] = useState([\"unknown\"]);\n  const [employed_since, setEmployed_since] = useState([\"unknown\"]);\n  const [avat, setAvat] = useState([pic]);\n  let test;\n  async function loadEmp() {\n    try {\n      const url = process.env.REACT_APP_API_URL;\n      const data = {\n        \"id\": `${id}`\n      };\n      const res = axios.get(`${url}/api/employee/`, {\n        headers: {\n          \"id\": `${id}`\n        }\n      });\n      setName((await res).data.name);\n      setTechnology((await res).data.technology);\n      setWorkspace((await res).data.workspace);\n      setEmployed_since((await res).data.createdAt);\n      setPosition((await res).data.possition);\n    } catch (e) {}\n  }\n  async function loadAvatar() {\n    try {\n      const url = process.env.REACT_APP_API_URL;\n      const data = {\n        \"id\": `${id}`\n      };\n      const res = axios.get(`http://192.168.100.10:5000/image/d47d4626-3261-4d62-a4d9-d8703b96995b.jpg`, {\n        responseType: \"blob\"\n      });\n      //console.log((await res).data)\n      //console.log(res);\n      test = blobToImage((await res).data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  const blobToImage = blob => {\n    return new Promise(resolve => {\n      const url = URL.createObjectURL(blob);\n      let img = new Image();\n      img.onload = () => {\n        URL.revokeObjectURL(url);\n        resolve(img);\n      };\n      img.src = url;\n    });\n  };\n  useEffect(() => {\n    let ignore = false;\n    if (!ignore) {\n      loadEmp();\n      loadAvatar();\n    }\n    return () => {\n      ignore = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aboutContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avat,\n        width: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middleSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Technology: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item\",\n          children: technology\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Position: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item\",\n          children: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Workspace: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item\",\n          children: workspace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Employed since: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item\",\n          children: employed_since\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(About, \"2PM8b+uqNOFQJyMNVD2gnOgG88M=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","avatar","Button","axios","jsxDEV","_jsxDEV","About","_s","pic","urlParams","URLSearchParams","window","location","search","id","get","name","setName","technology","setTechnology","position","setPosition","workspace","setWorkspace","employed_since","setEmployed_since","avat","setAvat","test","loadEmp","url","process","env","REACT_APP_API_URL","data","res","headers","createdAt","possition","e","loadAvatar","responseType","blobToImage","console","log","blob","Promise","resolve","URL","createObjectURL","img","Image","onload","revokeObjectURL","src","ignore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","_c","$RefreshReg$"],"sources":["D:/Projects/JS/test/Tasks/frontend/src/pages/about.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport '../Components/main.css'\r\nimport '../Components/office-plan.css'\r\nimport '../Components/bootstrap-theme.css'\r\nimport '../Components/about.css'\r\nimport avatar from '../images/avatar.jpg'\r\nimport {Button} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst About = () => {\r\n    const pic = null || avatar\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    const id = urlParams.get(\"id\")\r\n\r\n    const [name, setName] = useState([\"unknown\"])\r\n    const [technology, setTechnology] = useState([\"unknown\"])\r\n    const [position, setPosition] = useState([\"unknown\"])\r\n    const [workspace, setWorkspace] = useState([\"unknown\"])\r\n    const [employed_since, setEmployed_since] = useState([\"unknown\"])\r\n    const [avat, setAvat] = useState([pic])\r\n    let test\r\n\r\n    async function loadEmp() {\r\n        try {\r\n            const url = process.env.REACT_APP_API_URL\r\n            const data = {\"id\": `${id}`}\r\n            const res = axios.get(`${url}/api/employee/`,{headers:{\r\n                \"id\":`${id}`\r\n                }})\r\n            setName((await res).data.name)\r\n            setTechnology((await res).data.technology)\r\n            setWorkspace((await res).data.workspace)\r\n            setEmployed_since((await res).data.createdAt)\r\n            setPosition((await res).data.possition)\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    async function loadAvatar(){\r\n        try {\r\n            const url = process.env.REACT_APP_API_URL\r\n            const data = {\"id\": `${id}`}\r\n            const res = axios.get(`http://192.168.100.10:5000/image/d47d4626-3261-4d62-a4d9-d8703b96995b.jpg`,{responseType:\"blob\"})\r\n            //console.log((await res).data)\r\n            //console.log(res);\r\n            test = blobToImage((await res).data)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    const blobToImage = (blob) => {\r\n        return new Promise(resolve => {\r\n            const url = URL.createObjectURL(blob)\r\n            let img = new Image()\r\n            img.onload = () => {\r\n                URL.revokeObjectURL(url)\r\n                resolve(img)\r\n            }\r\n            img.src = url\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        let ignore = false;\r\n\r\n        if (!ignore) {\r\n            loadEmp()\r\n            loadAvatar()\r\n        }\r\n        return () => { ignore = true; }\r\n    },[]);\r\n\r\n    return (\r\n        <div className=\"aboutContainer\">\r\n            <div className={\"leftSide\"}>\r\n                <h1>{name}</h1>\r\n                <br/>\r\n                <img src={avat} width=\"300px\"/>\r\n            </div>\r\n            <div className={\"middleSide\"}>\r\n                <h3>Technology: <span className={\"item\"}>{technology}</span></h3>\r\n                <h3>Position: <span className={\"item\"}>{position}</span></h3>\r\n                <h3>Workspace: <span className={\"item\"}>{workspace}</span></h3>\r\n                <h3>Employed since: <span className={\"item\"}>{employed_since}</span></h3>\r\n            </div>\r\n            <div className={\"rightSide\"}><Button>Edit</Button></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}